<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ButtonRemove.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAA9VJREFUSEul
        lU1MVFcUx01q2kYCyowzuHExC1xoooDGhKSLruquQNpNK8PCDejGQHcsSNFWEdomUgJRysfMQKk2zVAr
        XJmZ0IEZIMhnaKg4MECZ8P0xrboxbc7p/7656J0hQ9p4kl/O/7x3zv/Mu4/wDuixvb390c7OTnc0GhX/
        BfQKt9t9v6CgwKQs9g8s6AYMSOVErddG7uzs5Ly8vNH8/Px0ZZM8tra2hBxCfmWqa73ezR6Ph4uLi6mw
        sHDUbrfvv0QukIP/h/7+fiovL6fS0lIqKSkZLSsrS35cm5ubAnAoFKLJyUlW6FqvaX19nVdWVtjn81FP
        Tw9L+vr6Hii7vbGxsSEAA2NYoWu9JtVr9Gt6WNntjbW1NQHoDUm+YHV1VQBeWFggHJM8KuO4NK3XcT2Y
        YTkLki9YXl4WgMPhMM3MzLBC13od1zM3N8dyFiRfsLS0JCKRCL0J8Ei+YHFxUQAGpHKi1utkPckXzM/P
        C0Dj4+MUDAb3JxCgfq/3VT02NkZyNhwKDXuvXn238dSpt5Xt65idnRXAeAdoZoWujTr89CkHr1yh7qws
        ftLREbsWDrOcnfH5/vCcO7fcdebM/C85OTZlHQu8LLH70lRO1EYduHmTWy0W+t5i4Z9tNv7N6TR6ngQC
        7M3NpXtWK7uOHuV7mZl+ZR2L6elpAVg+7vDwMCt0bdSehgZuzsggwwRLHthsNFFby57cXP7RajUWt5rN
        3Gg2VyrrWExNTQlAExMTxpnuh7++nlpjS6gDT4NfTT/Ip0LtMJupyWyuUbavAy9XwJzlApUTtV7Tr3V1
        3JKRIX8tOfGLYcwt0C0Wy15zGSMjIwIwIJUTtV7T40eP2HnyJN81majRZGLJXTzBTzk5dmUZH0NDQwJQ
        b2+v/O8Yh/xTlPd2GXz4kFqysuj24cP07ZEjVKeoBfXHjv1z//z5vUsCgYAAPDAwQIODg6wwNBawvAeo
        D1+xhtOnqSo1lavBV2lp1HzhAn+DI6qBvoVrX1ssfzuysz9V1rHAx8NYID8iyixO79Ztly9zZUoKXUtJ
        4S+Ao6hIfni4s7qab+AJruMa7vOX6emPDWOn0/lWe3v7O0KIa36/Pwr+BH+BZ+A5eKHjcbtfVJ848fLz
        Q4fou4sX5X3ZK2ei7RUVvZWpqS8r09KeV589+/6Btra24+Azl8vVhNwFgtDjyL+DWegF5CVFBHVEased
        O2uNFRXPUMse2Stn5GxXU1WVt7mm5rbL4TguFxwEVtzIRM4G70F/gPwh+Bj6E2Q7KAKXUF+SGllek/dk
        j+yVM3JWekgveLoO/gszzIadAsG/wgAAAABJRU5ErkJggg==
</value>
  </data>
</root>